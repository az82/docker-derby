name: Apache Derby Docker Image

on: 
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
env:
  SLUG: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}

jobs:
  create-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.SLUG }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login To Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build And Export To Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Test
        run: |
          set -e
          export CONTAINER_ID=$(docker run --rm -d -p 1527:1527 -v $(pwd)/dbs:/dbs ${{ env.SLUG }}:${{ steps.meta.outputs.version }});
          while docker inspect --format "{{json .State.Health }}" $CONTAINER_ID | grep -F starting; do sleep 5; done
          docker inspect --format "{{json .State.Health }}" $CONTAINER_ID | grep -F healthy 
          docker logs $CONTAINER_ID | grep -F "started and ready"
          nc -z localhost 1527
          docker kill $CONTAINER_ID

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
